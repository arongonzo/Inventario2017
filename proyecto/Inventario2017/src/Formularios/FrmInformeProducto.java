package Formularios;

import Entidades.Producto;
import Logico.ProductoLog;
import ModeloTabla.ModeloTablaProducto;
import clases.FormatRenderer;

import static Formularios.frmLogin.res;
import clases.Datos;
import clases.NumberRenderer;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.*;
import java.util.TreeMap;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;

import org.apache.poi.hwpf.model.FileInformationBlock;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;

public class FrmInformeProducto extends javax.swing.JInternalFrame {

    ProductoLog productos;
    Producto prd;
    ModeloTablaProducto mtp;
    
    public FrmInformeProducto() {
        initComponents();
        productos = new ProductoLog();
        llenarexcel();
        this.setVisible(false);
    }

    private void llenarexcel()
    {
        try
        {

            long datetimemlli= Datos.DatetoMilisecond(new Date());
            
            XSSFWorkbook wb = new XSSFWorkbook(new FileInputStream("c:/excel/template_producto.xlsx"));
            
            XSSFSheet ws = wb.getSheetAt(0);
            /*
            XSSFSheet ws = wb.createSheet("Inventario_completo");
            */
            List<Producto> listas = productos.listado(0,"" , "", "");
            mtp = new ModeloTablaProducto(listas);

            //load data to treemap
            TreeMap<String,Object[]> data = new TreeMap<>();
            int pos = 0;
            data.put("0",new Object[]{mtp.getColumnName(0), mtp.getColumnName(1),mtp.getColumnName(2), mtp.getColumnName(3), mtp.getColumnName(4), mtp.getColumnName(5)});

            for (Producto prd : mtp.productos) {
                data.put(String.valueOf(pos + 1),new Object[]{mtp.getValueAt(pos,0), mtp.getValueAt(pos,1),mtp.getValueAt(pos,2), mtp.getValueAt(pos,3), mtp.getValueAt(pos,4), mtp.getValueAt(pos,5)});
                pos++;
            }

            Set<String> ids = data.keySet();
            XSSFRow row;
            int rowId=5;

            for(String key:ids)
            {
                row=ws.createRow(rowId++);
                Object[] values = data.get(key);

                int cellId =1;
                for(Object o : values)
                {
                    Cell cell = row.createCell(cellId++);
                    cell.setCellValue(o.toString());
                }
            }
        

            FileOutputStream fos= new FileOutputStream(new File("c:/excel/ExcelProducto_" + String.valueOf(datetimemlli) + ".xlsx"));
            this.setVisible(false);
            wb.write(fos);
            fos.close();
            JOptionPane.showMessageDialog(null, "Datos exportados en c:/excel/ExcelProducto_" + String.valueOf(datetimemlli) + ".xlsx" );
            
        } 
        catch(FileNotFoundException ex)
        {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error en " + ex);
        } 
        catch (IOException ex) 
        {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error en " + ex);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 274, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
