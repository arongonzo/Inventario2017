package Formularios;

import java.beans.PropertyVetoException;
import java.util.TreeMap;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JPanel;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.*;
import java.util.TreeMap;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;

import org.apache.poi.hwpf.model.FileInformationBlock;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;

import Entidades.Producto;
import Entidades.View_ReporteInicioTemporada;
import Entidades.View_ReporteProductoTotal;

import Logico.ProductoLog;
import Logico.View_ReporteInicioTemporadaLog;
import Logico.View_ReporteProductoTotalLog;

import ModeloTabla.ModeloTablaProducto;
import ModeloTabla.ModeloTablaView_ReporteInicioTemporada;
import ModeloTabla.ModeloTablaView_ReporteProductoTotal;

import clases.Datos;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.xssf.usermodel.XSSFDataFormat;

public class frmPrincipal extends javax.swing.JFrame {

    ProductoLog productos;
    View_ReporteInicioTemporadaLog productosInicio;
    
    Producto prd;
    View_ReporteInicioTemporada ProductoInicio;
    
    ModeloTablaProducto mtp;
    ModeloTablaView_ReporteInicioTemporada modeloInicio;
    
    View_ReporteProductoTotalLog log_productototal;
    ModeloTablaView_ReporteProductoTotal modelo_productototal;
    
    public frmPrincipal() {
        initComponents();
        productos = new ProductoLog();
        productosInicio = new View_ReporteInicioTemporadaLog();
        
        log_productototal = new View_ReporteProductoTotalLog();
       
        ((JPanel)getContentPane()).setOpaque(false);
        setIconImage(new ImageIcon(getClass().getResource("/Images/icono.png")).getImage());
        ImageIcon uno = new ImageIcon(this.getClass().getResource("/Images/fondogrande.jpg"));
        JLabel fondo= new JLabel();
        fondo.setIcon(uno);
        getLayeredPane().add(fondo, JLayeredPane.FRAME_CONTENT_LAYER);
        fondo.setBounds(0,0,uno.getIconWidth(),uno.getIconHeight());
        this.setTitle("Sistema de Gestión de Respuestos Consumibles");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dpnEscritorio = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuBodega = new javax.swing.JMenu();
        mnuproductos = new javax.swing.JMenuItem();
        mnuDespacho = new javax.swing.JMenu();
        mnudespachoproducto = new javax.swing.JMenuItem();
        mnusolicitadprog = new javax.swing.JMenu();
        menuprogramada = new javax.swing.JMenuItem();
        mnurespuesto = new javax.swing.JMenuItem();
        mnuinformes = new javax.swing.JMenu();
        mnuInformeProducto = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        mmuReporteSaldoInicio = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        mnuConfiguracion = new javax.swing.JMenu();
        Temporada = new javax.swing.JMenuItem();
        mnuSistema = new javax.swing.JMenuItem();
        mnuZonal = new javax.swing.JMenuItem();
        mnuUnidad = new javax.swing.JMenuItem();
        mnuCondicionSistema = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mnuUsuarios = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        mnuSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        dpnEscritorio.setBackground(new java.awt.Color(204, 204, 204));
        dpnEscritorio.setToolTipText("");
        dpnEscritorio.setOpaque(false);

        javax.swing.GroupLayout dpnEscritorioLayout = new javax.swing.GroupLayout(dpnEscritorio);
        dpnEscritorio.setLayout(dpnEscritorioLayout);
        dpnEscritorioLayout.setHorizontalGroup(
            dpnEscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1658, Short.MAX_VALUE)
        );
        dpnEscritorioLayout.setVerticalGroup(
            dpnEscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
        );

        jMenuBar1.setForeground(new java.awt.Color(204, 204, 255));

        mnuBodega.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/btn_producto.png"))); // NOI18N
        mnuBodega.setText("Bodega");
        mnuBodega.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuBodegaActionPerformed(evt);
            }
        });

        mnuproductos.setText("Formulario de ingreso de repuestos recién adquiridos");
        mnuproductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuproductosActionPerformed(evt);
            }
        });
        mnuBodega.add(mnuproductos);

        jMenuBar1.add(mnuBodega);

        mnuDespacho.setText("Despacho");

        mnudespachoproducto.setText("Despacho de Repuestos");
        mnudespachoproducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnudespachoproductoActionPerformed(evt);
            }
        });
        mnuDespacho.add(mnudespachoproducto);

        jMenuBar1.add(mnuDespacho);

        mnusolicitadprog.setText("Solicitudes");

        menuprogramada.setText("Programación Anual");
        menuprogramada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuprogramadaActionPerformed(evt);
            }
        });
        mnusolicitadprog.add(menuprogramada);

        mnurespuesto.setText("Solicitud de Repuesto");
        mnurespuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnurespuestoActionPerformed(evt);
            }
        });
        mnusolicitadprog.add(mnurespuesto);

        jMenuBar1.add(mnusolicitadprog);

        mnuinformes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/informes.png"))); // NOI18N
        mnuinformes.setText("Informes");

        mnuInformeProducto.setText("Reporte Stock de Inventario");
        mnuInformeProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuInformeProductoActionPerformed(evt);
            }
        });
        mnuinformes.add(mnuInformeProducto);

        jMenuItem3.setText("Reporte Solicitud Programada Anual");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        mnuinformes.add(jMenuItem3);

        jMenuItem4.setText("Reporte Solicitud Repuestos");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        mnuinformes.add(jMenuItem4);

        mmuReporteSaldoInicio.setText("Reporte Saldo Inicio Año");
        mmuReporteSaldoInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmuReporteSaldoInicioActionPerformed(evt);
            }
        });
        mnuinformes.add(mmuReporteSaldoInicio);

        jMenuItem5.setText("Reporte Despacho");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        mnuinformes.add(jMenuItem5);

        jMenuItem1.setText("Reporte Anual de Movimientos en Bodega");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        mnuinformes.add(jMenuItem1);

        jMenuBar1.add(mnuinformes);

        mnuConfiguracion.setText("Configuración");

        Temporada.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/producto.png"))); // NOI18N
        Temporada.setText("Temporada");
        Temporada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TemporadaActionPerformed(evt);
            }
        });
        mnuConfiguracion.add(Temporada);

        mnuSistema.setText("Sistema");
        mnuSistema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSistemaActionPerformed(evt);
            }
        });
        mnuConfiguracion.add(mnuSistema);

        mnuZonal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/zonal.png"))); // NOI18N
        mnuZonal.setText("Zonal");
        mnuZonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuZonalActionPerformed(evt);
            }
        });
        mnuConfiguracion.add(mnuZonal);

        mnuUnidad.setText("Unidad");
        mnuUnidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuUnidadActionPerformed(evt);
            }
        });
        mnuConfiguracion.add(mnuUnidad);

        mnuCondicionSistema.setText("Condición Sistema");
        mnuCondicionSistema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCondicionSistemaActionPerformed(evt);
            }
        });
        mnuConfiguracion.add(mnuCondicionSistema);
        mnuConfiguracion.add(jSeparator1);

        mnuUsuarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/usuario.png"))); // NOI18N
        mnuUsuarios.setText("Usuarios");
        mnuUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuUsuariosActionPerformed(evt);
            }
        });
        mnuConfiguracion.add(mnuUsuarios);
        mnuConfiguracion.add(jSeparator2);
        mnuConfiguracion.add(jSeparator3);

        mnuSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cerrar.png"))); // NOI18N
        mnuSalir.setText("Salir");
        mnuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSalirActionPerformed(evt);
            }
        });
        mnuConfiguracion.add(mnuSalir);

        jMenuBar1.add(mnuConfiguracion);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dpnEscritorio)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dpnEscritorio)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void mnuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_mnuSalirActionPerformed

    private void mnuUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuUsuariosActionPerformed
        FrmUsuarios misUsuarios = new FrmUsuarios();
        dpnEscritorio.add(misUsuarios);
        misUsuarios.show();
    }//GEN-LAST:event_mnuUsuariosActionPerformed

    private void mnuUnidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuUnidadActionPerformed
        FrmUnidad misUnidades = new FrmUnidad();
        dpnEscritorio.add(misUnidades);
        
        try {
            misUnidades.setMaximum(true);
        } catch (PropertyVetoException e) {
            // Vetoed by internalFrame
            // ... possibly add some handling for this case
        }
        
        misUnidades.show();
        
    }//GEN-LAST:event_mnuUnidadActionPerformed

    private void mnuSistemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSistemaActionPerformed
        FrmSistema misSistemas = new FrmSistema();
        dpnEscritorio.add(misSistemas);
        
        try {
            misSistemas.setMaximum(true);
        } catch (PropertyVetoException e) {
            // Vetoed by internalFrame
            // ... possibly add some handling for this case
        }
        
        misSistemas.show();
    }//GEN-LAST:event_mnuSistemaActionPerformed

    private void TemporadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TemporadaActionPerformed
        FrmTemporada misTemporadas = new FrmTemporada();
        dpnEscritorio.add(misTemporadas);
        misTemporadas.show();
    }//GEN-LAST:event_TemporadaActionPerformed

    private void mnuBodegaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuBodegaActionPerformed
        FrmUsuarios misUsuarios = new FrmUsuarios();
        dpnEscritorio.add(misUsuarios);
        misUsuarios.show();
    }//GEN-LAST:event_mnuBodegaActionPerformed

    private void mnuproductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuproductosActionPerformed
        FrmProducto misProductos = new FrmProducto();
        dpnEscritorio.add(misProductos);
        misProductos.show();
    }//GEN-LAST:event_mnuproductosActionPerformed

    private void mnuZonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuZonalActionPerformed
        FrmZonal misZonal = new FrmZonal();
        dpnEscritorio.add(misZonal);
        misZonal.show();
    }//GEN-LAST:event_mnuZonalActionPerformed

    private void mnurespuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnurespuestoActionPerformed
        // TODO add your handling code here:
        FrmRepuesto misRepuesto = new FrmRepuesto();
        dpnEscritorio.add(misRepuesto);
        
        try {
            misRepuesto.setMaximum(true);
        } catch (PropertyVetoException e) {
            // Vetoed by internalFrame
            // ... possibly add some handling for this case
        }
        
        misRepuesto.show();
    }//GEN-LAST:event_mnurespuestoActionPerformed

    private void menuprogramadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuprogramadaActionPerformed
        // TODO add your handling code here:
        FrmProgramada misprogramas = new FrmProgramada();
        dpnEscritorio.add(misprogramas);
        misprogramas.show();
    }//GEN-LAST:event_menuprogramadaActionPerformed

    private void mnudespachoproductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnudespachoproductoActionPerformed
        FrmDespacho misDespacho = new FrmDespacho();
        dpnEscritorio.add(misDespacho);
        misDespacho.show();
    }//GEN-LAST:event_mnudespachoproductoActionPerformed

    private void mnuCondicionSistemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCondicionSistemaActionPerformed
       // TODO add your handling code here:
        FrmCondicionSistema misCondiciones = new FrmCondicionSistema();
        dpnEscritorio.add(misCondiciones);
        misCondiciones.show();
    }//GEN-LAST:event_mnuCondicionSistemaActionPerformed

    private void mnuInformeProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuInformeProductoActionPerformed
        try
        {
            long datetimemlli= Datos.DatetoMilisecond(new Date());
            
            XSSFWorkbook wb = new XSSFWorkbook(new FileInputStream("c:/excel/template_producto.xlsx"));
            
            XSSFSheet ws = wb.getSheetAt(0);
            /*
            XSSFSheet ws = wb.createSheet("Inventario_completo");
            */
            List<Producto> listas = productos.listado(0,"" , "", "");
            mtp = new ModeloTablaProducto(listas);

            //load data to treemap
            TreeMap<Integer,Object[]> data = new TreeMap<>();
            int pos = 0;
            //data.put("0",new Object[]{mtp.getColumnName(0), mtp.getColumnName(1),mtp.getColumnName(2), mtp.getColumnName(3), mtp.getColumnName(4), mtp.getColumnName(5)});

            for (Producto prd : mtp.productos) {
                data.put(pos + 1,new Object[]{mtp.getValueAt(pos,0), mtp.getValueAt(pos,1),mtp.getValueAt(pos,2), mtp.getValueAt(pos,3), mtp.getValueAt(pos,4), mtp.getValueAt(pos,5), mtp.getValueAt(pos,6)});
                pos++;
            }

            Set<Integer> ids = data.keySet();
            XSSFRow row;
            XSSFDataFormat dt = wb.createDataFormat();
            int rowId=12;

            for(Integer key:ids)
            {
                CellStyle numberStyle = wb.createCellStyle();
                numberStyle.setDataFormat(dt.getFormat("0"));
                numberStyle.setBorderRight(CellStyle.BORDER_THIN);
                numberStyle.setRightBorderColor(IndexedColors.BLACK.getIndex());
                numberStyle.setBorderBottom(CellStyle.BORDER_THIN);
                numberStyle.setBottomBorderColor(IndexedColors.BLACK.getIndex());
                numberStyle.setBorderLeft(CellStyle.BORDER_THIN);
                numberStyle.setLeftBorderColor(IndexedColors.BLACK.getIndex());
                numberStyle.setBorderTop(CellStyle.BORDER_THIN);
                numberStyle.setTopBorderColor(IndexedColors.BLACK.getIndex());
                
                row=ws.createRow(rowId++);
                Object[] values = data.get(key);

                int cellId =0;
                for(Object o : values)
                {
                    

                    Cell cell = row.createCell(0);
                    cell.setCellValue(Integer.parseInt(values[0].toString()));
                    cell.setCellStyle(numberStyle);

                    cell = row.createCell(1);
                    cell.setCellValue(values[1].toString());
                    cell.setCellStyle(numberStyle);

                    cell = row.createCell(2);
                    cell.setCellValue(values[2].toString());
                    cell.setCellStyle(numberStyle);

                    cell = row.createCell(3);
                    cell.setCellValue(values[3].toString());
                    cell.setCellStyle(numberStyle);

                    cell = row.createCell(4);
                    cell.setCellValue(values[4].toString());
                    cell.setCellStyle(numberStyle);

                    cell = row.createCell(5);
                    cell.setCellValue(Integer.parseInt(values[5].toString()));
                    cell.setCellStyle(numberStyle);
                 
                    cell = row.createCell(6);
                    cell.setCellValue(Double.parseDouble(values[6].toString()));
                    cell.setCellStyle(numberStyle);
                    
                }
            }

            FileOutputStream fos= new FileOutputStream(new File("c:/excel/ExcelProducto_" + String.valueOf(datetimemlli) + ".xlsx"));
            wb.write(fos);
            fos.close();
            JOptionPane.showMessageDialog(null, "Datos exportados en c:/excel/ExcelProducto_" + String.valueOf(datetimemlli) + ".xlsx" );
            
        } 
        catch(FileNotFoundException ex)
        {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error en " + ex);
        } 
        catch (IOException ex) 
        {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error en " + ex);
        }
    }//GEN-LAST:event_mnuInformeProductoActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        FrmInformeReporteAnual misInformes = new FrmInformeReporteAnual();
        dpnEscritorio.add(misInformes);
        try {
            misInformes.setMaximum(true);
        } catch (PropertyVetoException e) {
            // Vetoed by internalFrame
            // ... possibly add some handling for this case
        }
        misInformes.show();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        FrmInformeSolicitudRepuesto misInformes = new FrmInformeSolicitudRepuesto();
        dpnEscritorio.add(misInformes);
        try {
            misInformes.setMaximum(true);
        } catch (PropertyVetoException e) {
            // Vetoed by internalFrame
            // ... possibly add some handling for this case
        }
        misInformes.show();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void mmuReporteSaldoInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mmuReporteSaldoInicioActionPerformed
        // TODO add your handling code here:
        try
        {
            long datetimemlli= Datos.DatetoMilisecond(new Date());
            
            XSSFWorkbook wb = new XSSFWorkbook(new FileInputStream("c:/excel/template_productoInicio.xlsx"));
            
            XSSFSheet ws = wb.getSheetAt(0);
            /*
            XSSFSheet ws = wb.createSheet("Inventario_completo");
            */
            List<View_ReporteInicioTemporada> listas = productosInicio.listado();
            modeloInicio = new ModeloTablaView_ReporteInicioTemporada(listas);

            //load data to treemap
            TreeMap<Integer,Object[]> data = new TreeMap<>();
            int pos = 0;
            //data.put("0",new Object[]{mtp.getColumnName(0), mtp.getColumnName(1),mtp.getColumnName(2), mtp.getColumnName(3), mtp.getColumnName(4), mtp.getColumnName(5)});

            for (View_ReporteInicioTemporada prd : modeloInicio.ViewReporteInicioTemporada) {
                data.put(pos + 1,new Object[]{modeloInicio.getValueAt(pos,0), modeloInicio.getValueAt(pos,1),modeloInicio.getValueAt(pos,2), modeloInicio.getValueAt(pos,3), modeloInicio.getValueAt(pos,4), modeloInicio.getValueAt(pos,5), modeloInicio.getValueAt(pos,6),  modeloInicio.getValueAt(pos,7)});
                pos++;
            }

            Set<Integer> ids = data.keySet();
            XSSFRow row;
            XSSFDataFormat dt = wb.createDataFormat();
            int rowId=12;

            for(Integer key:ids)
            {
                CellStyle numberStyle = wb.createCellStyle();
                numberStyle.setDataFormat(dt.getFormat("0"));
                numberStyle.setBorderRight(CellStyle.BORDER_THIN);
                numberStyle.setRightBorderColor(IndexedColors.BLACK.getIndex());
                numberStyle.setBorderBottom(CellStyle.BORDER_THIN);
                numberStyle.setBottomBorderColor(IndexedColors.BLACK.getIndex());
                numberStyle.setBorderLeft(CellStyle.BORDER_THIN);
                numberStyle.setLeftBorderColor(IndexedColors.BLACK.getIndex());
                numberStyle.setBorderTop(CellStyle.BORDER_THIN);
                numberStyle.setTopBorderColor(IndexedColors.BLACK.getIndex());
                
                row=ws.createRow(rowId++);
                Object[] values = data.get(key);

                int cellId =0;

                Cell cell = row.createCell(0);
                cell.setCellValue(Integer.parseInt(values[1].toString()));
                cell.setCellStyle(numberStyle);    

                cell = row.createCell(1);
                cell.setCellValue(Integer.parseInt(values[0].toString()));
                cell.setCellStyle(numberStyle);

                cell = row.createCell(2);
                cell.setCellValue(values[2].toString());
                cell.setCellStyle(numberStyle);

                cell = row.createCell(3);
                cell.setCellValue(values[3].toString());
                cell.setCellStyle(numberStyle);

                cell = row.createCell(4);
                cell.setCellValue(values[4].toString());
                cell.setCellStyle(numberStyle);

                cell = row.createCell(5);
                cell.setCellValue(values[5].toString());
                cell.setCellStyle(numberStyle);
                
                cell = row.createCell(6);
                cell.setCellValue(Integer.parseInt(values[6].toString()));
                cell.setCellStyle(numberStyle);

                cell = row.createCell(7);
                cell.setCellValue(Integer.parseInt(values[7].toString()));
                cell.setCellStyle(numberStyle);

            }

            FileOutputStream fos= new FileOutputStream(new File("c:/excel/ExcelProductoInicioAnio_" + String.valueOf(datetimemlli) + ".xlsx"));
            wb.write(fos);
            fos.close();
            JOptionPane.showMessageDialog(null, "Datos exportados en c:/excel/ExcelProductoInicioAnio_" + String.valueOf(datetimemlli) + ".xlsx" );
            
        } 
        catch(FileNotFoundException ex)
        {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error en " + ex);
        } 
        catch (IOException ex) 
        {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error en " + ex);
        } 
        
    }//GEN-LAST:event_mmuReporteSaldoInicioActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        FrmInformeReporteDespacho misInformes = new FrmInformeReporteDespacho();
        dpnEscritorio.add(misInformes);
        try {
            misInformes.setMaximum(true);
        } catch (PropertyVetoException e) {
            // Vetoed by internalFrame
            // ... possibly add some handling for this case
        }
        misInformes.show();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        try
        {
            long datetimemlli= Datos.DatetoMilisecond(new Date());
            
            XSSFWorkbook wb = new XSSFWorkbook(new FileInputStream("c:/excel/template_productocompleto.xlsx"));
            
            XSSFSheet ws = wb.getSheetAt(0);
            /*
            XSSFSheet ws = wb.createSheet("Inventario_completo");
            */
            List<View_ReporteProductoTotal> listas = log_productototal.listado();
            modelo_productototal = new ModeloTablaView_ReporteProductoTotal(listas);

            //load data to treemap
            TreeMap<Integer,Object[]> data = new TreeMap<>();
            int pos = 0;
            //data.put("0",new Object[]{mtp.getColumnName(0), mtp.getColumnName(1),mtp.getColumnName(2), mtp.getColumnName(3), mtp.getColumnName(4), mtp.getColumnName(5)});

            for (View_ReporteProductoTotal prd : modelo_productototal.view) {
                data.put(pos + 1,new Object[]{modelo_productototal.getValueAt(pos,0), modelo_productototal.getValueAt(pos,1),modelo_productototal.getValueAt(pos,2), modelo_productototal.getValueAt(pos,3), modelo_productototal.getValueAt(pos,4), modelo_productototal.getValueAt(pos,5), modelo_productototal.getValueAt(pos,6),  modelo_productototal.getValueAt(pos,7),  modelo_productototal.getValueAt(pos,8),  modelo_productototal.getValueAt(pos,9),  modelo_productototal.getValueAt(pos,10),  modelo_productototal.getValueAt(pos,11),  modelo_productototal.getValueAt(pos,12), modelo_productototal.getValueAt(pos,13)});
                pos++;
            }

            Set<Integer> ids = data.keySet();
            XSSFRow row;
            XSSFDataFormat dt = wb.createDataFormat();
            int rowId=5;

            for(Integer key:ids)
            {
                CellStyle numberStyle = wb.createCellStyle();
                numberStyle.setDataFormat(dt.getFormat("0"));
                numberStyle.setBorderRight(CellStyle.BORDER_THIN);
                numberStyle.setRightBorderColor(IndexedColors.BLACK.getIndex());
                numberStyle.setBorderBottom(CellStyle.BORDER_THIN);
                numberStyle.setBottomBorderColor(IndexedColors.BLACK.getIndex());
                numberStyle.setBorderLeft(CellStyle.BORDER_THIN);
                numberStyle.setLeftBorderColor(IndexedColors.BLACK.getIndex());
                numberStyle.setBorderTop(CellStyle.BORDER_THIN);
                numberStyle.setTopBorderColor(IndexedColors.BLACK.getIndex());
                
                CellStyle decimalStyle = wb.createCellStyle();
                decimalStyle.setDataFormat(dt.getFormat("0.00"));
                decimalStyle.setBorderRight(CellStyle.BORDER_THIN);
                decimalStyle.setRightBorderColor(IndexedColors.BLACK.getIndex());
                decimalStyle.setBorderBottom(CellStyle.BORDER_THIN);
                decimalStyle.setBottomBorderColor(IndexedColors.BLACK.getIndex());
                decimalStyle.setBorderLeft(CellStyle.BORDER_THIN);
                decimalStyle.setLeftBorderColor(IndexedColors.BLACK.getIndex());
                decimalStyle.setBorderTop(CellStyle.BORDER_THIN);
                decimalStyle.setTopBorderColor(IndexedColors.BLACK.getIndex());
                
                row=ws.createRow(rowId++);
                Object[] values = data.get(key);

                int cellId =0;

                Cell cell = row.createCell(0);
                cell.setCellValue(Integer.parseInt(values[0].toString()));
                cell.setCellStyle(numberStyle);    

                cell = row.createCell(1);
                cell.setCellValue(values[1].toString());
                cell.setCellStyle(numberStyle);
                
                cell = row.createCell(2);
                cell.setCellValue(values[2].toString());
                cell.setCellStyle(numberStyle);
                
                cell = row.createCell(3);
                cell.setCellValue(values[3].toString());
                cell.setCellStyle(numberStyle);
                
                cell = row.createCell(4);
                cell.setCellValue(Integer.parseInt(values[4].toString()));
                cell.setCellStyle(numberStyle);
                
                cell = row.createCell(5);
                cell.setCellValue(Integer.parseInt(values[5].toString()));
                cell.setCellStyle(numberStyle);

                cell = row.createCell(6);
                cell.setCellValue(Integer.parseInt(values[6].toString()));
                cell.setCellStyle(numberStyle);
                
                cell = row.createCell(7);
                cell.setCellValue(Integer.parseInt(values[7].toString()));
                cell.setCellStyle(numberStyle);
                
                cell = row.createCell(8);
                cell.setCellValue(Integer.parseInt(values[8].toString()));
                cell.setCellStyle(numberStyle);
                
                cell = row.createCell(9);
                cell.setCellValue(Integer.parseInt(values[9].toString()));
                cell.setCellStyle(numberStyle);

                cell = row.createCell(10);
                cell.setCellValue(Integer.parseInt(values[10].toString()));
                cell.setCellStyle(numberStyle);

                cell = row.createCell(11);
                cell.setCellValue(Integer.parseInt(values[11].toString()));
                cell.setCellStyle(numberStyle);

                cell = row.createCell(12);
                cell.setCellValue(Integer.parseInt(values[12].toString()));
                cell.setCellStyle(numberStyle);
                
                cell = row.createCell(13);
                cell.setCellValue(Double.parseDouble(values[13].toString()));
                cell.setCellStyle(decimalStyle);
                
            }

            FileOutputStream fos= new FileOutputStream(new File("c:/excel/ExcelProductoTotal_" + String.valueOf(datetimemlli) + ".xlsx"));
            wb.write(fos);
            fos.close();
            JOptionPane.showMessageDialog(null, "Datos exportados en c:/excel/ExcelProductoTotal_" + String.valueOf(datetimemlli) + ".xlsx" );
            
        } 
        catch(FileNotFoundException ex)
        {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error en " + ex);
        } 
        catch (IOException ex) 
        {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error en " + ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Temporada;
    private javax.swing.JDesktopPane dpnEscritorio;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JMenuItem menuprogramada;
    private javax.swing.JMenuItem mmuReporteSaldoInicio;
    private javax.swing.JMenu mnuBodega;
    private javax.swing.JMenuItem mnuCondicionSistema;
    private javax.swing.JMenu mnuConfiguracion;
    private javax.swing.JMenu mnuDespacho;
    private javax.swing.JMenuItem mnuInformeProducto;
    private javax.swing.JMenuItem mnuSalir;
    private javax.swing.JMenuItem mnuSistema;
    private javax.swing.JMenuItem mnuUnidad;
    private javax.swing.JMenuItem mnuUsuarios;
    private javax.swing.JMenuItem mnuZonal;
    private javax.swing.JMenuItem mnudespachoproducto;
    private javax.swing.JMenu mnuinformes;
    private javax.swing.JMenuItem mnuproductos;
    private javax.swing.JMenuItem mnurespuesto;
    private javax.swing.JMenu mnusolicitadprog;
    // End of variables declaration//GEN-END:variables
}
